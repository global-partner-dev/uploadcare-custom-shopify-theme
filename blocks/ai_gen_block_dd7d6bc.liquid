{% doc %}
  @prompt
    Ready To Print Your Pictures?
    Start by uploading your pictures.
    Select Your Pictures
    
    text with select pictures button.
    It should have the same functionality as the "select pictures" button on the current page.
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-picture-upload-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
    padding: {{ block.settings.section_padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-picture-upload-heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    font-weight: 600;
    color: {{ block.settings.heading_color }};
    margin: 0 0 {{ block.settings.text_spacing }}px 0;
    line-height: 1.2;
  }

  .ai-picture-upload-subtext-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtext_size }}px;
    color: {{ block.settings.subtext_color }};
    margin: 0 0 {{ block.settings.text_spacing }}px 0;
    line-height: 1.4;
  }

  .ai-picture-upload-instruction-{{ ai_gen_id }} {
    font-size: {{ block.settings.instruction_size }}px;
    color: {{ block.settings.instruction_color }};
    margin: 0 0 {{ block.settings.button_spacing }}px 0;
    line-height: 1.4;
  }

  .ai-picture-upload-button-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
    background-color: {{ block.settings.button_background_color }};
    color: {{ block.settings.button_text_color }};
    border: {{ block.settings.button_border_width }}px solid {{ block.settings.button_border_color }};
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 {{ block.settings.button_shadow_vertical }}px {{ block.settings.button_shadow_blur }}px rgba(0, 0, 0, {{ block.settings.button_shadow_opacity | divided_by: 100.0 }});
  }

  .ai-picture-upload-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background_color }};
    color: {{ block.settings.button_hover_text_color }};
    transform: translateY(-2px);
    box-shadow: 0 {{ block.settings.button_shadow_vertical | plus: 2 }}px {{ block.settings.button_shadow_blur | plus: 2 }}px rgba(0, 0, 0, {{ block.settings.button_shadow_opacity | divided_by: 100.0 | times: 1.2 }});
  }

  .ai-picture-upload-button-icon-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    flex-shrink: 0;
  }

  @media screen and (max-width: 749px) {
    .ai-picture-upload-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.85 }}px;
    }
    
    .ai-picture-upload-subtext-{{ ai_gen_id }} {
      font-size: {{ block.settings.subtext_size | times: 0.9 }}px;
    }
    
    .ai-picture-upload-instruction-{{ ai_gen_id }} {
      font-size: {{ block.settings.instruction_size | times: 0.9 }}px;
    }
    
    .ai-picture-upload-button-{{ ai_gen_id }} {
      padding: {{ block.settings.button_padding_vertical | times: 0.8 }}px {{ block.settings.button_padding_horizontal | times: 0.9 }}px;
      font-size: {{ block.settings.button_text_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<picture-upload-{{ ai_gen_id }}
  class="ai-picture-upload-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.heading != blank %}
    <h2 class="ai-picture-upload-heading-{{ ai_gen_id }}">
      {{ block.settings.heading }}
    </h2>
  {% endif %}

  {% if block.settings.subtext != blank %}
    <p class="ai-picture-upload-subtext-{{ ai_gen_id }}">
      {{ block.settings.subtext }}
    </p>
  {% endif %}

  {% if block.settings.instruction_text != blank %}
    <p class="ai-picture-upload-instruction-{{ ai_gen_id }}">
      {{ block.settings.instruction_text }}
    </p>
  {% endif %}

  <button
    type="button"
    class="ai-picture-upload-button-{{ ai_gen_id }}"
    aria-label="Select pictures to upload"
  >
    {% if block.settings.show_icon %}
      <svg
        class="ai-picture-upload-button-icon-{{ ai_gen_id }}"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
        <circle cx="9" cy="9" r="2"/>
        <path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"/>
      </svg>
    {% endif %}
    {{ block.settings.button_text }}
  </button>

  <input
    type="file"
    multiple
    accept="image/*"
    style="display: none;"
    class="ai-picture-upload-input-{{ ai_gen_id }}"
    aria-label="Select picture files"
  >
</picture-upload-{{ ai_gen_id }}>

<script>
  (function() {
    class PictureUpload{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.button = this.querySelector('.ai-picture-upload-button-{{ ai_gen_id }}');
        this.fileInput = this.querySelector('.ai-picture-upload-input-{{ ai_gen_id }}');
        
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.button.addEventListener('click', () => {
          this.fileInput.click();
        });

        this.fileInput.addEventListener('change', (event) => {
          this.handleFileSelection(event);
        });
      }

      handleFileSelection(event) {
        const files = event.target.files;
        
        if (files.length > 0) {
          console.log(`Selected ${files.length} file(s):`, Array.from(files).map(f => f.name));
          
          this.dispatchEvent(new CustomEvent('picturesSelected', {
            detail: {
              files: Array.from(files),
              fileCount: files.length
            },
            bubbles: true
          }));
        }
      }
    }

    customElements.define('picture-upload-{{ ai_gen_id }}', PictureUpload{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Picture upload prompt",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Ready To Print Your Pictures?"
    },
    {
      "type": "text",
      "id": "subtext",
      "label": "Subtext",
      "default": "Start by uploading your pictures."
    },
    {
      "type": "text",
      "id": "instruction_text",
      "label": "Instruction text",
      "default": "Select Your Pictures"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Select Pictures"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "text_spacing",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Text spacing",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_spacing",
      "min": 16,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Button spacing",
      "default": 24
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "subtext_color",
      "label": "Subtext color",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "instruction_color",
      "label": "Instruction color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subtext_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtext size",
      "default": 16
    },
    {
      "type": "range",
      "id": "instruction_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Instruction size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Background color",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Hover background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Border color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_padding_vertical",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Vertical padding",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_padding_horizontal",
      "min": 16,
      "max": 48,
      "step": 4,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 28
    },
    {
      "type": "range",
      "id": "button_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 0
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Section border radius",
      "default": 0
    },
    {
      "type": "header",
      "content": "Button shadow"
    },
    {
      "type": "range",
      "id": "button_shadow_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Shadow opacity",
      "default": 0
    },
    {
      "type": "range",
      "id": "button_shadow_vertical",
      "min": 0,
      "max": 12,
      "step": 2,
      "unit": "px",
      "label": "Vertical offset",
      "default": 4
    },
    {
      "type": "range",
      "id": "button_shadow_blur",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Blur",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Picture upload prompt"
    }
  ]
}
{% endschema %}